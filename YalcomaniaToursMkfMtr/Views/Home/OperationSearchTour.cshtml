@model OperationSearchTourModel
@{
    ViewData["Title"] = "Turları Ara";
    var userId = Context.Session.GetInt32("UserId");
    var userName = Context.Session.GetString("UserName") + " " + Context.Session.GetString("UserSurname");
    var subeId = Context.Session.GetInt32("SubeId");
    var subeName = Context.Session.GetString("SubeName");
}
<style>
    #SearchTableWindow{
        display:block;
    }
    #TourSearchTable {
        width: 100%;
        border-collapse: collapse;
    }

        #TourSearchTable th {
            background-color: black;
            color: white;
            border: 1px solid white;
        }

        #TourSearchTable td {
            border: 1px solid black;
        }

        #TourSearchTable tr:nth-child(even) {
            background-color: antiquewhite;
        }

        #TourSearchTable td,
        #TourSearchTable th {
            padding: 1em;
        }

    #BottomTable {
        width: 100%;
        border-collapse: collapse;
        position: relative;
    }

        #BottomTable td {
            border: 1px solid white;
            padding: 1em;
            background-color: black;
            color: white;
        }

    #Window {
        position: fixed;
        width: 97%;
        height: 85%;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: aliceblue;
        border: 1px solid black;
        display: none;
    }

    #TourDetailsTable {
        width: 100%;
        border-collapse: collapse;
    }

        #TourDetailsTable th {
            background-color: black;
            color: white;
            border: 1px solid white;
        }

        #TourDetailsTable td {
            border: 1px solid black;
        }

        #TourDetailsTable tr:nth-child(even) {
            background-color: aliceblue;
        }

    #KurTable {
        width: 10%;
        border-collapse: collapse;
    }

        #KurTable th {
            background-color: black;
            color: white;
            border: 1px solid white;
        }

        #KurTable td {
            border: 1px solid black;
        }

    #ToplamTable {
        width: 20%;
        border-collapse: collapse;
    }

        #ToplamTable th {
            background-color: black;
            color: white;
            border: 1px solid white;
        }

        #ToplamTable td {
            border: 1px solid black;
        }

    #AyriTable {
        width: 20%;
        border-collapse: collapse;
    }

        #AyriTable th {
            background-color: black;
            color: white;
            border: 1px solid white;
        }

        #AyriTable td {
            border: 1px solid black;
        }
        #FillBusWindow{
            display:none;
            background-color:antiquewhite;
            position:fixed;
            width:100%;
            height:85%;
            top:50%;
            left:50%;
            transform:translate(-50%,-50%);
        }
        #AracTable{
            width:100%;
            border-collapse:collapse;
        }
        #AracTable th{
            border: 1px solid black;
        }
        #AracTable td{
            border:1px solid black;
        }
        #BiletTable{
            width:100%;
            border-collapse:collapse;
        
        }
        #BiletTable th{
            border: 1px solid black;
        }
        #BiletTable td{
            border:1px solid black;
        }
</style>
<div>
    <div id="SearchTableWindow">
        <!-- Tur Adı - Tur Tarihi - Tur Bitti Mi - Tur İptal Mi -->
        <div style="padding-bottom:2em; display:flex; flex-direction:row; gap: 1em;">
            <p>Tur Adı:</p>
            <input type="text" id="TourNameSearch" name="TourNameSearch" placeholder="Tur Adı Arayın..." />
            <p>Tur Tarihi:</p>
            <input type="date" id="TourDateSearch" name="TourDateSearch" />
            <p>Tur Bitti Mi:</p>
            <input type="checkbox" id="TourFinishedCheck" name="TourFinishedCheck" />
            <p>Tur İptal Mi:</p>
            <input type="checkbox" id="TourCancelledCheck" name="TourCancelledCheck" />
            <button id="SearchTourButton">Ara</button>
        </div>

        <!-- TourSearchTable -->
        <table id="TourSearchTable">
            <thead>
                <tr>
                    <th style="width:15%">Tarih</th>
                    <th style="width:35%">Tur Adı</th>
                    <th style="width:5%">Bitti Mi</th>
                    <th style="width:5%">İptal Mi</th>
                    <th style="width:5%">F</th>
                    <th style="width:5%">H</th>
                    <th style="width:5%">G</th>
                    <th style="width:5%">T</th>
                    <th style="width:10%"></th>
                    <th style="width:10%"></th>
                </tr>
            </thead>
            <tbody>
                <!-- Rows will be filled with data later -->
            </tbody>
        </table>

        <!-- BottomTable -->
        <table id="BottomTable">
            <tr>
                <td style="width: 60%;">Toplam</td>
                <td id="TfBox" style="width: 5%;"></td>
                <td id="ThBox" style="width: 5%;"></td>
                <td id="TgBox" style="width: 5%;"></td>
                <td id="TtBox" style="width: 5%;"></td>
                <td style="width:20%"></td>
            </tr>
        </table>
    </div>

    <div id="Window">
        <div>
            <button id="EndTour" style="padding-right:2em; float:left; background-color:red;color:white">Turu Bitir</button>
            <button id="MergeTour" style="padding-right:2em; float:left; background-color:green;color:white">Biletleri Başka Tura Aktar</button>
            <button id="CancelMerge" style="padding-right:2em; float:left; background-color:blue;color:white">Aktarma İptal</button>
            <button id="VehicleDetails" style="float:left; background-color:orange;color:black">Otobüse Yolcu Ata</button>
            <button id="GelirGider" style="float:left; background-color:purple;color:white">Gelir Gider</button>
            <button id="CloseWindow" style="float:right">Kapat</button>
        </div>
        <div style="padding-bottom:1em">
            <!-- TourDetailsTable -->
            <table id="TourDetailsTable">
                <thead>
                    <tr>
                        <th style="width:10%">Ad</th>
                        <th style="width:9%">Uyruk</th>
                        <th style="width:8%">Bölge</th>
                        <th style="width:8%">Otel</th>
                        <th style="width:5%">Oda</th>
                        <th style="width:3%">F</th>
                        <th style="width:3%">H</th>
                        <th style="width:3%">G</th>
                        <th style="width:6%">Para Birimi</th>
                        <th style="width:5%">Paid</th>
                        <th style="width:5%">Rest</th>
                        <th style="width:5%">Total</th>
                        <th style="width:5%">Servis</th>
                        <th style="width:7%">Servis Saati</th>
                        <th style="width:3%">İptal</th>
                        <th style="width:7%">Pas Şirketi</th>
                        <th style="width:4%">Düzenle</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Javascript ile doldur -->
                </tbody>
            </table>
        </div>
        <div>
            <div style="width:100%; display:flex; flex-direction:row; gap:1em">
                <!-- KurTable -->
                <table id="KurTable">
                    <thead>
                        <tr>
                            <th>Kur</th>
                            <th>TRY</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td style="background-color:black; color:white">USD</td>
                            <td id="UsdToTryBox"></td>
                        </tr>
                        <tr>
                            <td style="background-color:black; color:white">EUR</td>
                            <td id="EurToTryBox"></td>
                        </tr>
                    </tbody>
                </table>
                <!-- AyriTable -->
                <table id="AyriTable">
                    <thead>
                        <tr>
                            <th>Ayri</th>
                            <th>Total</th>
                            <th>PAID</th>
                            <th>REST</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- javascript ile doldur -->
                    </tbody>
                </table>
                <!-- ToplamTable -->
                <table id="ToplamTable">
                    <thead>
                        <tr>
                            <th>Toplam</th>
                            <th>Total</th>
                            <th>PAID</th>
                            <th>REST</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- javascript ile doldur -->
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div id="FillBusWindow">
        
        <!--Araç Seç-->
        <div>
            <div style="display:flex; flex-direction:row; gap:1em">
                <p>Araç Seç:</p>
                <select id="AracSec">
                    <!-- Javascriptte doldur -->
                </select>
            </div>
            <button id="FillBusSave" style="float:right">Sayfayı Yenile</button>
            <button id="FillBusClose" style="float:right">Geri Dön</button>
        </div>
        <div style="padding-bottom:2em">
            <!--AracTable-->
            <table id="AracTable">
                <thead>
                    <tr>
                        <th>Ad Soyad</th>
                        <th>Bolge</th>
                        <th>Otel</th>
                        <th>Oda No</th>
                        <th>Para Birimi</th>
                        <th>PAID</th>
                        <th>REST</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Javascriptte doldur -->
                </tbody>
            </table>
        </div>
        <div>
            <!--ServisTable-->
            <table id="BiletTable">
                <thead>
                    <tr>
                        <th>Ad Soyad</th>
                        <th>Bolge</th>
                        <th>Otel</th>
                        <th>Otobüs</th>
                        <th>Servis</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Javascriptte doldur -->
                </tbody>
            </table>
        </div>
    </div>

</div>


<script>
    $(document).ready(function () {
        //#region arrayleri vs. oluştur
        let detailKeep;
        let mergeKeep = undefined;
        document.getElementById("CancelMerge").disabled = true;
        let turTipiListArray = @Html.Raw(Json.Serialize(Model.TurTipiList.Select(tu => new { tu.Id, tu.TurTipiAdi })));
        let turListArray = @Html.Raw(Json.Serialize(Model.TurList.Select(t => new { t.Id, t.Tarih, t.Saat, t.TurTipiId, t.BittiMi, t.FiyatTRY, t.FiyatUSD, t.FiyatEUR, t.AracId1, t.AracId2, t.AracId3, t.AracId4, t.ServisId1, t.ServisId2, t.ServisId3, t.TurIptalMi })));
        let biletListArray = @Html.Raw(Json.Serialize(Model.BiletList.Select(b => new { b.Id, b.TurId, b.AracId, b.ServisId, b.SatanElemanId,b.SatanSubeId, b.MusteriAd, b.MusteriSoyad, b.MusteriUyruk, b.MusteriBolgeId, b.MusteriOtelId, b.MusteriOdaNo, b.FullSayi, b.HalfSayi, b.GuestSayi, b.ParaBirimi, b.Paid, b.Rest, b.OdendiMi,b.ServisIstiyorMu, b.ServisSaati, b.BiletIptalMi })));
        let bolgeListArray = @Html.Raw(Json.Serialize(Model.BolgeList.Select(bo => new { bo.Id, bo.BolgeIsim, bo.BolgeMerkezeUzaklikMetre })));
        let otelListArray = @Html.Raw(Json.Serialize(Model.OtelList.Select(o => new { o.Id, o.OtelIsim, o.OtelMerkezeUzaklikMetre })));
        let paraBirimiListArray = @Html.Raw(Json.Serialize(Model.ParaBirimiList.Select(p => new { p.Iso4217, p.ParaBirimiAdi })));
        let uyrukListArray = @Html.Raw(Json.Serialize(Model.UyrukList.Select(u => new { u.Alpha3Code, u.UlkeIsmi })));
        let kurListArray = @Html.Raw(Json.Serialize(Model.KurList.Select(p => new { p.Tarih, p.ParaBirimiAdi, p.DolaraOran, p.EuroyaOran })));
        let aracListArray = @Html.Raw(Json.Serialize(Model.AracList.Select(a => new { a.Id, a.AracTipiId, a.PlakaVeyaIsim, a.Kapasite, a.SilindiMi })));
        let aracTipiListArray = @Html.Raw(Json.Serialize(Model.AracTipiList.Select(at => new { at.Id, at.AracTipiAdi })));
        console.log("turTipiListArray:",turTipiListArray);
        console.log("turListArray:",turListArray);
        console.log("biletListArray:",biletListArray);
        console.log("bolgeListArray:",bolgeListArray);
        console.log("otelListArray:",otelListArray);
        console.log("paraBirimiListArray:",paraBirimiListArray);
        console.log("uyrukListArray:",uyrukListArray);
        console.log("kurListArray:",kurListArray);

        let tourName = "";
        let tourDate;

        let fTotal;
        let hTotal;
        let gTotal;

        let bottomFTotal;
        let bottomHTotal;
        let bottomGTotal;

        let aracSecValue;
        let aracTablePool;

        let tourDetailsTableBody = document.querySelector("#TourDetailsTable tbody");
        let ayriTableBody = document.querySelector("#AyriTable tbody");
        let topTableBody = document.querySelector("#ToplamTable tbody");
        let aracSec = document.getElementById("AracSec");
        let aracTableBody = document.querySelector("#AracTable tbody");
        let biletTableBody = document.querySelector("#BiletTable tbody");

        //#endregion

        //Ara butonuna tıklayınca
        document.getElementById("SearchTourButton").addEventListener("click", function () {
            
            //Yazılan ad ve seçilen tarihi kaydet
            tourName = document.getElementById("TourNameSearch").value;
            tourDate = document.getElementById("TourDateSearch").value;
            tourEnded = document.getElementById("TourFinishedCheck").checked;
            tourCancelled = document.getElementById("TourCancelledCheck").checked;
            let tourNameArray = tourName.toLowerCase().split(" ");

            //#region Tur ve Tur Tipi arraylerini filtrele
            let turTipiArray = [];
            let turBittiMiArray = [];
            let turTarihArray = [];
            let turIptalArray = [];
            let turArray = [];
            for (let i = 0; i < turTipiListArray.length; i++) {
                let turAdi = turTipiListArray[i].turTipiAdi.toLowerCase();
                if (tourNameArray.every(tna => turAdi.includes(tna))) {
                    turTipiArray.push(turTipiListArray[i]);
                }
            }
            console.log("turTipiArray:",turTipiArray);
            for (let i = 0; i < turListArray.length; i++) {
                let tur = turListArray[i];
                if (tur.bittiMi === tourEnded) {
                    turBittiMiArray.push(tur);
                }
            }
            console.log("turBittiMiArray:",turBittiMiArray);
            for (let i = 0; i < turBittiMiArray.length; i++) {
                let tur = turBittiMiArray[i];
                if (tur.turIptalMi === tourCancelled) {
                    turIptalArray.push(tur);
                }
            }
            console.log("turIptalArray:",turIptalArray);
            if (tourDate !== "") {
                for (let i = 0; i < turIptalArray.length; i++) {
                    let tur = turIptalArray[i];
                    console.log("tur.tarih:",tur.tarih)
                    if (tur.tarih === tourDate) {
                        turTarihArray.push(tur);
                    }
                }
            }
            else{
                turTarihArray = turIptalArray;
            }
            console.log("turTarihArray:",turTarihArray);
            for (let i = 0; i < turTarihArray.length; i++) {
                let tur = turTarihArray[i];
                if (turTipiArray.some(tt => tt.id === tur.turTipiId)) {
                    turArray.push(tur);
                }
            }
            console.log("turArray:",turArray);
            //#endregion

            //#region Tabloyu temizle
            let tableBody = document.querySelector("#TourSearchTable tbody");
            tableBody.innerHTML = "";
            document.getElementById("TfBox").textContent = "";
            document.getElementById("ThBox").textContent = "";
            document.getElementById("TgBox").textContent = "";
            document.getElementById("TtBox").textContent = "";
            aracSec.innerHTML = "";
            aracTableBody.innerHTML = "";
            biletTableBody.innerHTML = "";
            bottomFTotal = 0;
            bottomHTotal = 0;
            bottomGTotal = 0;
            //#endregion

            // Tabloyu doldur
            for (let i = 0; i < turArray.length; i++) {
                let tur = turArray[i];
                let turTipi = turTipiArray.find(tt => tt.id === tur.turTipiId);
                let biletArray = biletListArray.filter(bi => (bi.turId === tur.id));
                console.log("tur-turTipi-bilet:");
                console.log(tur);
                console.log(turTipi);
                console.log(biletArray);

                fTotal = 0;
                hTotal = 0;
                gTotal = 0;

                //Her turun f,g,h totallerini bul
                for (let j = 0; j < biletArray.length; j++) {
                    console.log("BiletArray:");
                    console.log(biletArray[j]);
                    fTotal += biletArray[j].fullSayi;
                    hTotal += biletArray[j].halfSayi;
                    gTotal += biletArray[j].guestSayi;
                }
                console.log("Totaller:");
                console.log(fTotal);
                console.log(hTotal);
                console.log(gTotal);

                let row = document.createElement("tr");

                //#region Tabloya eklenecek row içeriği
                let tarihCell = document.createElement("td");
                tarihCell.textContent = tur.tarih;
                row.appendChild(tarihCell);

                let turAdiCell = document.createElement("td");
                turAdiCell.textContent = turTipi.turTipiAdi;
                row.appendChild(turAdiCell);

                let bittiMiCell = document.createElement("td");
                if (tur.bittiMi) {
                    bittiMiCell.textContent = "Evet";
                }
                else {
                    bittiMiCell.textContent = "Hayır";
                }
                row.appendChild(bittiMiCell);

                let iptalMiCell = document.createElement("td");
                if (tur.turIptalMi) {
                    iptalMiCell.textContent = "Evet";
                }
                else {
                    iptalMiCell.textContent = "Hayır";
                }
                row.appendChild(iptalMiCell);

                let fCell = document.createElement("td");
                fCell.textContent = fTotal;
                row.appendChild(fCell);

                let hCell = document.createElement("td");
                hCell.textContent = hTotal;
                row.appendChild(hCell);

                let gCell = document.createElement("td");
                gCell.textContent = gTotal;
                row.appendChild(gCell);

                let tCell = document.createElement("td");
                tCell.textContent = fTotal+hTotal+gTotal;
                row.appendChild(tCell);
                //#endregion

                //#region Detay butonlarını oluştur
                let detailsCell = document.createElement("td");
                let detailsButton = document.createElement("button");
                detailsButton.id = "DetailsButton" + tur.id;
                detailsButton.textContent = "Detaylar";
                //Detay butonlarına fonksiyon ata
                detailsButton.addEventListener("click", function(turObject) {
                    return function() {
                        detailKeep = turObject;
                        let biletDetailArray = [];
                        for (let l = 0; l < biletListArray.length; l++){
                            let bilet = biletListArray[l];
                            if (bilet.turId === turObject.id){
                                biletDetailArray.push(bilet);
                            }
                        }
                        
                        //Detay tablolarını temizle
                        tourDetailsTableBody.innerHTML = "";
                        ayriTableBody.innerHTML = "";
                        topTableBody.innerHTML = "";

                        let ayriTryPaid = 0;
                        let ayriTryRest = 0;
                        let ayriUsdPaid = 0;
                        let ayriUsdRest = 0;
                        let ayriEurPaid = 0;
                        let ayriEurRest = 0;

                        let siraliBiletArray = biletDetailArray;
                        biletDetailArray = mesafeSirala(siraliBiletArray);
                        console.log("biletDetailArray:", biletDetailArray);

                        //Detay tablosunu doldur
                        for (let m=0; m<biletDetailArray.length; m++){
                            let biletDetail = biletDetailArray[m];
                            console.log("biletDetail:",biletDetail);
                            
                            let detailRow = document.createElement("tr");

                            let adSoyadCell = document.createElement("td");
                            adSoyadCell.textContent = biletDetail.musteriAd + " " + biletDetail.musteriSoyad;
                            detailRow.appendChild(adSoyadCell);

                            let uyrukCell = document.createElement("td");
                            let uyruk = uyrukListArray.find(u => u.alpha3Code === biletDetail.musteriUyruk);
                            uyrukCell.textContent = uyruk.ulkeIsmi;
                            detailRow.appendChild(uyrukCell);

                            let bolgeCell = document.createElement("td");
                            let bolge = bolgeListArray.find(bo => bo.id === biletDetail.musteriBolgeId);
                            bolgeCell.textContent = bolge.bolgeIsim;
                            detailRow.appendChild(bolgeCell);

                            let otelCell = document.createElement("td");
                            let otel;
                            if (biletDetail.musteriOtelId === null){
                                otel = {otelIsim: ""};
                            }
                            else{
                                otel = otelListArray.find(o => o.id === biletDetail.musteriOtelId);
                            }
                            otelCell.textContent = otel.otelIsim;
                            detailRow.appendChild(otelCell);

                            let odaCell = document.createElement("td");
                            odaCell.textContent = biletDetail.musteriOdaNo;
                            detailRow.appendChild(odaCell);
                            
                            let fCell = document.createElement("td");
                            fCell.textContent = biletDetail.fullSayi;
                            detailRow.appendChild(fCell);

                            let hCell = document.createElement("td");
                            hCell.textContent = biletDetail.halfSayi;
                            detailRow.appendChild(hCell);

                            let gCell = document.createElement("td");
                            gCell.textContent = biletDetail.guestSayi;
                            detailRow.appendChild(gCell);

                            let paraBirimiCell = document.createElement("td");
                            paraBirimiCell.textContent = biletDetail.paraBirimi;
                            detailRow.appendChild(paraBirimiCell);

                            let paidCell = document.createElement("td");
                            paidCell.textContent = biletDetail.paid;
                            detailRow.appendChild(paidCell);

                            let restCell = document.createElement("td");
                            restCell.textContent = biletDetail.rest;
                            detailRow.appendChild(restCell);

                            let totalCell = document.createElement("td");
                            totalCell.textContent = biletDetail.fullSayi + biletDetail.halfSayi + biletDetail.guestSayi;
                            detailRow.appendChild(totalCell);

                            let servisCell = document.createElement("td");
                            if (biletDetail.servisIstiyorMu){
                                servisCell.textContent = "Evet";
                            }
                            else{
                                servisCell.textContent = "Hayır";
                            }
                            detailRow.appendChild(servisCell);

                            let servisSaatiCell = document.createElement("td");
                            servisSaatiCell.textContent = biletDetail.servisSaati;
                            detailRow.appendChild(servisSaatiCell);

                            let iptalCell = document.createElement("td");
                            if (biletDetail.biletIptalMi){
                                iptalCell.textContent = "Evet";
                            }
                            else{
                                iptalCell.textContent = "Hayır";
                            }
                            detailRow.appendChild(iptalCell);

                            let pasSirketiCell = document.createElement("td");
                            pasSirketiCell.textContent = "";
                            detailRow.appendChild(pasSirketiCell);

                            let editBiletCell = document.createElement("td");
                            let editBiletButton = document.createElement("button");
                            editBiletButton.id = "EditBiletButton" + biletDetail.id;
                            editBiletButton.textContent = "Düzenle";
                            editBiletButton.addEventListener("click", function(biletObject) {
                                return function() {
                                    console.log(biletObject);
                                    if (biletObject.biletIptalMi === true) {
                                        alert("Bu bilet iptal. Düzenleme yapılamaz.");
                                        return;
                                    }
                                    else {
                                        if (biletObject.musteriOtelId === null) {
                                            biletObject.musteriOtelId = "null";
                                        }
                                        if (biletObject.musteriOdaNo === null) {
                                            biletObject.musteriOdaNo = "null";
                                        }
                                        if (biletObject.musteriAdres === null) {
                                            biletObject.musteriAdres = "null";
                                        }
                                        if (biletObject.aciklama === null) {
                                            biletObject.aciklama = "null";
                                        }
                                        if (biletObject.servisSaati === null) {
                                            biletObject.servisSaati = "null";
                                        }
                                        let biletToSend = [
                                            biletObject.id.toString(),
                                            biletObject.turId.toString(),
                                            biletObject.biletIptalMi.toString(),
                                            biletObject.satanSubeId.toString(),
                                            biletObject.satanElemanId.toString(),
                                            biletObject.musteriAd,
                                            biletObject.musteriSoyad,
                                            biletObject.musteriUyruk,
                                            biletObject.musteriBolgeId.toString(),
                                            biletObject.musteriOtelId.toString(),
                                            biletObject.musteriOdaNo,
                                            biletObject.musteriAdres,
                                            biletObject.musteriTelNo,
                                            biletObject.fullSayi.toString(),
                                            biletObject.halfSayi.toString(),
                                            biletObject.guestSayi.toString(),
                                            biletObject.paraBirimi,
                                            biletObject.paid.toString(),
                                            biletObject.rest.toString(),
                                            biletObject.odendiMi.toString(),
                                            biletObject.aciklama,
                                            biletObject.servisIstiyorMu.toString(),
                                            biletObject.servisSaati.toString()
                                        ];
                                        console.log("biletToSend:", biletToSend); 
                                        biletEditToController(biletToSend);
                                    }
                                };
                            }(biletDetail));
                            editBiletCell.appendChild(editBiletButton);
                            detailRow.appendChild(editBiletCell);

                            tourDetailsTableBody.appendChild(detailRow);
                            
                            switch (biletDetail.paraBirimi) {
                                case "TRY":
                                    ayriTryPaid += biletDetail.paid;
                                    ayriTryRest += biletDetail.rest;
                                    break;
                                case "USD":
                                    ayriUsdPaid += biletDetail.paid;
                                    ayriUsdRest += biletDetail.rest;
                                    break;
                                case "EUR":
                                    ayriEurPaid += biletDetail.paid;
                                    ayriEurRest += biletDetail.rest;
                                    break;
                            }
                        };
                        
                        //Ayrı Tabloyu Doldur
                        fillAyriTable("TRY", ayriTryPaid, ayriTryRest);
                        fillAyriTable("USD", ayriUsdPaid, ayriUsdRest);
                        fillAyriTable("EUR", ayriEurPaid, ayriEurRest);

                        //Seçilen tura en yakın tarihteki kuru bul.
                        let closestKur = kurListArray.reduce(function(prev, curr) {
                          let prevDate = new Date(prev.tarih);
                          let currDate = new Date(curr.tarih);
                          let turDate = new Date(turObject.tarih);
                          if (prevDate < turDate && currDate < turDate && prevDate > currDate) {
                            return prev;
                          } else if (prevDate < turDate && currDate < turDate && prevDate < currDate) {
                            return curr;
                          } else {
                            return prev;
                          }
                        });
                        console.log("closestKur:");
                        console.log(closestKur);

                        //Kur tablosunu doldur
                        let usdToTryBox = document.getElementById("UsdToTryBox");
                        let eurToTryBox = document.getElementById("EurToTryBox");
                        usdToTryBox.textContent = (1 / closestKur.dolaraOran).toFixed(2);
                        eurToTryBox.textContent = (1 / closestKur.euroyaOran).toFixed(2);

                        //Toplam tablosunu doldur
                        //Toplamları hesapla
                        let topTryPaid = ayriTryPaid + ayriUsdPaid * (1 / closestKur.dolaraOran) + ayriEurPaid * (1 / closestKur.euroyaOran);
                        let topTryRest = ayriTryRest + ayriUsdRest * (1 / closestKur.dolaraOran) + ayriEurRest * (1 / closestKur.euroyaOran);
                        let topUsdPaid = ayriUsdPaid + ayriTryPaid * closestKur.dolaraOran + ayriEurPaid * (1 / closestKur.euroyaOran) * closestKur.dolaraOran;
                        let topUsdRest = ayriUsdRest + ayriTryRest * closestKur.dolaraOran + ayriEurRest * (1 / closestKur.euroyaOran) * closestKur.dolaraOran;
                        let topEurPaid = ayriEurPaid + ayriTryPaid * closestKur.euroyaOran + ayriUsdPaid * (1 / closestKur.dolaraOran) * closestKur.euroyaOran;
                        let topEurRest = ayriEurRest + ayriTryRest * closestKur.euroyaOran + ayriUsdRest * (1 / closestKur.dolaraOran) * closestKur.euroyaOran;
                        
                        fillToplamTable("TRY", topTryPaid, topTryRest);
                        fillToplamTable("USD", topUsdPaid, topUsdRest);
                        fillToplamTable("EUR", topEurPaid, topEurRest);

                        //Pencereyi göster.
                        document.getElementById("Window").style.display = "block";
                    };
                }(tur));
                detailsCell.appendChild(detailsButton);
                row.appendChild(detailsCell);
                //#endregion

                //#region Tur bilgileri düzenleme butonlarını oluştur
                let editCell = document.createElement("td");
                let editButton = document.createElement("button");
                editButton.id = "EditButton" + tur.id;
                editButton.textContent = "Düzenle";
                editButton.addEventListener("click", function(turObject) {
                    let today = new Date();
                    let turTarihDate = new Date(turObject.tarih);
                    let dayDifference = Math.floor((today - turTarihDate) / (1000 * 60 * 60 * 24));
                    return function() {
                        console.log(turObject);
                        if (turObject.bittiMi === true) {
                            alert("Bu tur bitmiş. Düzenleme yapılamaz.");
                            return;
                        }
                        else if (dayDifference > 0) {
                            alert("Bu turun tarihi geçmiş. Düzenleme yapılamaz.");
                            return;
                        }
                        else {
                            if (turObject.aracId2 === null) {
                                turObject.aracId2 = "";
                            }
                            if (turObject.aracId3 === null) {
                                turObject.aracId3 = "";
                            }
                            if (turObject.aracId4 === null) {
                                turObject.aracId4 = "";
                            }
                            if (turObject.servisId1 === null) {
                                turObject.servisId1 = "";
                            }
                            if (turObject.servisId2 === null) {
                                turObject.servisId2 = "";
                            }
                            if (turObject.servisId3 === null) {
                                turObject.servisId3 = "";
                            }
                            let turPostArray = [turObject.id.toString(), turObject.tarih, turObject.saat, turObject.turTipiId.toString(),
                            turObject.bittiMi.toString(), turObject.fiyatTRY.toString(), turObject.fiyatUSD.toString(),
                            turObject.fiyatEUR.toString(), turObject.aracId1.toString(), turObject.aracId2.toString(),
                            turObject.aracId3.toString(), turObject.aracId4.toString(), turObject.servisId1.toString(),
                            turObject.servisId2.toString(), turObject.servisId3.toString(), turObject.turIptalMi.toString()];
                            sendArrayToController(turPostArray);
                        }
                    };
                }(tur));
                editCell.appendChild(editButton);
                row.appendChild(editCell);
                //#endregion

                tableBody.appendChild(row);

                bottomFTotal += fTotal;
                bottomHTotal += hTotal;
                bottomGTotal += gTotal;
            }

            //Alttaki toplam PAX tablosunu doldur
            document.getElementById("TfBox").textContent = bottomFTotal;
            document.getElementById("ThBox").textContent = bottomHTotal;
            document.getElementById("TgBox").textContent = bottomGTotal;
            document.getElementById("TtBox").textContent = bottomFTotal + bottomHTotal + bottomGTotal;

        });

        //Detay penceresini kapat
        document.getElementById("CloseWindow").addEventListener("click", function () {
            document.getElementById("Window").style.display = "none";
        });

        document.getElementById("FillBusClose").addEventListener("click", function () {
            document.getElementById("FillBusWindow").style.display = "none";
            document.getElementById("SearchTableWindow").style.display = "block";
        });

        document.getElementById("FillBusSave").addEventListener("click", function () {
            location.reload();
        });

        //Otobüse yolcu ata
        document.getElementById("VehicleDetails").addEventListener("click", function () {
            let dayDifference = dateDiff(detailKeep);
            if (dayDifference > 0) {
                alert("Bu turun tarihi geçmiş. Düzenleme yapılamaz.");
                return;
            }
            else if (detailKeep.bittiMi === true){
                alert("Bu tur bitmiş. Düzenleme yapılamaz.");
            }
            else if (detailKeep.turIptalMi === true){
                alert("Bu tur iptal edilmiş. Düzenleme yapılamaz.");
            }
            else{
                document.getElementById("Window").style.display = "none";
                document.getElementById("SearchTableWindow").style.display = "none";
                document.getElementById("FillBusWindow").style.display = "block";

                aracSec.innerHTML = "";

                aracTablePool = biletListArray.filter(b => (b.turId === detailKeep.id) && (b.biletIptalMi === false));
                let aracSecenekleri = aracListArray.filter(a => a.id === detailKeep.aracId1 || a.id === detailKeep.aracId2 || a.id === detailKeep.aracId3 || a.id === detailKeep.aracId4 || a.id === detailKeep.servisId1 || a.id === detailKeep.servisId2 || a.id === detailKeep.servisId3);
                console.log("aracSecenekleri:", aracSecenekleri);
                console.log("aracTablePool:", aracTablePool);
                for (let ar = 0; ar < aracSecenekleri.length; ar++) {
                    let aracSecenek = aracSecenekleri[ar];
                    let aracSTipi = aracTipiListArray.find(at => at.id === aracSecenek.aracTipiId);
                    let aracOption = document.createElement("option");
                    aracOption.value = aracSecenek.id;
                    aracOption.textContent = aracSecenek.plakaVeyaIsim + " - " + aracSTipi.aracTipiAdi;
                    aracSec.appendChild(aracOption);
                }
                getAracSecValue();
                fillAracTable(aracTablePool);
                fillBiletTable(aracTablePool);
            }
        });
        
        document.getElementById("AracSec").addEventListener("change", function () {
            getAracSecValue();
            fillAracTable(aracTablePool);
        });

        //Biletleri başka tura aktar
        document.getElementById("MergeTour").addEventListener("click", function () {
            let dayDifference = dateDiff(detailKeep);
            if (dayDifference > 0) {
                alert("Bu turun tarihi geçmiş. Düzenleme yapılamaz.");
                return;
            }
            else if (detailKeep.bittiMi === true) {
                alert("Bu tur bitmiş. Düzenleme yapılamaz.");
            }
            else if (detailKeep.turIptalMi === true) {
                alert("Bu tur iptal edilmiş. Düzenleme yapılamaz.");
            }
            else { 
                if (mergeKeep === undefined) {
                    mergeKeep = detailKeep;
                    document.getElementById("CancelMerge").disabled = false;
                    document.getElementById("Window").style.display = "none";
                    document.getElementById("MergeTour").innerText = "Bilet Aktarımını Onayla";
                }
                else if (mergeKeep.id === detailKeep.id) {
                    alert("Aynı turu seçtiniz. Lütfen farklı bir tur seçin.");
                    document.getElementById("Window").style.display = "none";
                }
                else {
                    let mergeOnay = confirm("Biletleri başka tura aktarmak istediğinize emin misiniz?");
                    if (mergeOnay) {
                        let mergeTourArray = [mergeKeep.id.toString(), detailKeep.id.toString()];
                        sendMergeTourToController(mergeTourArray);
                    }
                }
            }
            
            
            
        });

        //Başka tura aktarımı iptal et.
        document.getElementById("CancelMerge").addEventListener("click", function () {
            mergeKeep = undefined;
            console.log("cancel merge clicked")
            document.getElementById("CancelMerge").disabled = true;
            document.getElementById("MergeTour").innerText = "Biletleri Başka Tura Aktar";
        });

        //Turu bitir
        document.getElementById("EndTour").addEventListener("click", function () {
            let endOnay = confirm("Bu turu bitirmek istediğinize emin misiniz?");
            if (endOnay) {
                let endTourArray = [detailKeep.id.toString()];
                sendEndTourToController(endTourArray);
            }
        });

        //Gelir Gidere git
        document.getElementById("GelirGider").addEventListener("click", function () {
            if (detailKeep.bittiMi === true) {
                alert("Bu tur bitmiş. Düzenleme yapılamaz.");
            }
            else if (detailKeep.turIptalMi === true) {
                alert("Bu tur iptal edilmiş. Düzenleme yapılamaz.");
            }
            else {
                let gelirGiderArray = [detailKeep.id.toString()];
                sendGelirGiderToController(gelirGiderArray);
            }
        });

        function dateDiff(array){
            let today = new Date();
            let turTarihDate = new Date(array.tarih);
            let dayDifference = Math.floor((today - turTarihDate) / (1000 * 60 * 60 * 24));
            return dayDifference;
        }

        function fillBiletTable(array) {
            biletTableBody.innerHTML = "";
            for (let bt = 0; bt < array.length; bt++) {
                let bilet = array[bt];
                let biletRow = document.createElement("tr");
                let biletAdSoyadCell = document.createElement("td");
                biletAdSoyadCell.textContent = bilet.musteriAd + " " + bilet.musteriSoyad;
                biletRow.appendChild(biletAdSoyadCell);
                let biletBolgeCell = document.createElement("td");
                let biletBolge = bolgeListArray.find(bo => bo.id === bilet.musteriBolgeId);
                biletBolgeCell.textContent = biletBolge.bolgeIsim;
                biletRow.appendChild(biletBolgeCell);
                let biletOtelCell = document.createElement("td");
                if (bilet.musteriOtelId === null) {
                    biletOtelCell.textContent = "Otel Yok";
                }
                else {
                    let biletOtel = otelListArray.find(o => o.id === bilet.musteriOtelId);
                    biletOtelCell.textContent = biletOtel.otelIsim;
                }
                biletRow.appendChild(biletOtelCell);
                //Otobüs butonlar
                let biletOtobusCell = document.createElement("td");
                let aracButon1 = document.createElement("button");
                let aracButon2 = document.createElement("button");
                let aracButon3 = document.createElement("button");
                let aracButon4 = document.createElement("button");
                let aracButonNull = document.createElement("button");
                aracButon1.id = "AracButon1";
                aracButon1.textContent = "1";
                aracButon2.id = "AracButon2";
                aracButon2.textContent = "2";
                aracButon2.disabled = detailKeep.aracId2 === null ? true : false;
                aracButon3.id = "AracButon3";
                aracButon3.textContent = "3";
                aracButon3.disabled = detailKeep.aracId3 === null ? true : false;
                aracButon4.id = "AracButon4";
                aracButon4.textContent = "4";
                aracButon4.disabled = detailKeep.aracId4 === null ? true : false;
                aracButonNull.id = "AracButonNull";
                aracButonNull.textContent = "X";
                aracButon1.addEventListener("click", function (biletObj) {
                    return function() {
                        biletObj.aracId = detailKeep.aracId1;
                        fillAracTable(aracTablePool);
                        sendToCont(biletObj);
                    };
                }(bilet));
                aracButon2.addEventListener("click", function (biletObj) {
                    return function() {
                        biletObj.aracId = detailKeep.aracId2;
                        fillAracTable(aracTablePool);
                        sendToCont(biletObj);
                    };
                }(bilet));
                aracButon3.addEventListener("click", function (biletObj) {
                    return function() {
                        biletObj.aracId = detailKeep.aracId3;
                        fillAracTable(aracTablePool);
                        sendToCont(biletObj);
                    };
                }(bilet));
                aracButon4.addEventListener("click", function (biletObj) {
                    return function() {
                        biletObj.aracId = detailKeep.aracId4;
                        fillAracTable(aracTablePool);
                        sendToCont(biletObj);
                    };
                }(bilet));
                aracButonNull.addEventListener("click", function (biletObj) {
                    return function() {
                        biletObj.aracId = null;
                        fillAracTable(aracTablePool);
                        sendToCont(biletObj);
                    };
                }(bilet));
                biletOtobusCell.appendChild(aracButon1);
                biletOtobusCell.appendChild(aracButon2);
                biletOtobusCell.appendChild(aracButon3);
                biletOtobusCell.appendChild(aracButon4);
                biletOtobusCell.appendChild(aracButonNull);
                biletRow.appendChild(biletOtobusCell);
                //Servis Butonlar
                let biletServisCell = document.createElement("td");
                let servisButon1 = document.createElement("button");
                let servisButon2 = document.createElement("button");
                let servisButon3 = document.createElement("button");
                let servisButonNull = document.createElement("button");
                servisButon1.id = "ServisButon1";
                servisButon1.textContent = "1";
                servisButon1.disabled = detailKeep.servisId1 === null ? true : false;
                servisButon2.id = "ServisButon2";
                servisButon2.textContent = "2";
                servisButon2.disabled = detailKeep.servisId2 === null ? true : false;
                servisButon3.id = "ServisButon3";
                servisButon3.textContent = "3";
                servisButon3.disabled = detailKeep.servisId3 === null ? true : false;
                servisButonNull.id = "ServisButonNull";
                servisButonNull.textContent = "X";
                servisButon1.addEventListener("click", function (biletObj) {
                    return function() {
                        biletObj.servisId = detailKeep.servisId1;
                        fillAracTable(aracTablePool);
                        sendToCont(biletObj);
                    };
                }(bilet));
                servisButon2.addEventListener("click", function (biletObj) {
                    return function() {
                        biletObj.servisId = detailKeep.servisId2;
                        fillAracTable(aracTablePool);
                        sendToCont(biletObj);
                    };
                }(bilet));
                servisButon3.addEventListener("click", function (biletObj) {
                    return function() {
                        biletObj.servisId = detailKeep.servisId3;
                        fillAracTable(aracTablePool);
                        sendToCont(biletObj);
                    };
                }(bilet));
                servisButonNull.addEventListener("click", function (biletObj) {
                    return function() {
                        biletObj.servisId = null;
                        fillAracTable(aracTablePool);
                        sendToCont(biletObj);
                    };
                }(bilet));
                biletServisCell.appendChild(servisButon1);
                biletServisCell.appendChild(servisButon2);
                biletServisCell.appendChild(servisButon3);
                biletServisCell.appendChild(servisButonNull);
                biletRow.appendChild(biletServisCell);
                biletTableBody.appendChild(biletRow);
            }
        }

        function fillAracTable(array){
            aracTableBody.innerHTML = "";
            for (let at = 0; at < array.length; at++) {
                let arr = array[at];
                if (arr.aracId === parseInt(aracSecValue)) {
                    let aracTableRow = document.createElement("tr");
                    let aracAdSoyadCell = document.createElement("td");
                    aracAdSoyadCell.textContent = arr.musteriAd + " " + arr.musteriSoyad;
                    aracTableRow.appendChild(aracAdSoyadCell);
                    let aracBolgeCell = document.createElement("td");
                    let aracBolge = bolgeListArray.find(bo => bo.id === arr.musteriBolgeId);
                    aracBolgeCell.textContent = aracBolge.bolgeIsim;
                    aracTableRow.appendChild(aracBolgeCell);
                    let aracOtelCell = document.createElement("td");
                    if (arr.musteriOtelId === null) {
                        aracOtelCell.textContent = "Otel Yok";
                    }
                    else {
                        let aracOtel = otelListArray.find(o => o.id === arr.musteriOtelId);
                        aracOtelCell.textContent = aracOtel.otelIsim;
                    }
                    aracTableRow.appendChild(aracOtelCell);
                    let aracOdaCell = document.createElement("td");
                    if (arr.musteriOdaNo === null) {
                        aracOdaCell.textContent = "Oda Yok";
                    }
                    else {
                        aracOdaCell.textContent = arr.musteriOdaNo;
                    }
                    aracTableRow.appendChild(aracOdaCell);
                    let aracParaCell = document.createElement("td");
                    aracParaCell.textContent = arr.paraBirimi;
                    aracTableRow.appendChild(aracParaCell);
                    let aracPaidCell = document.createElement("td");
                    aracPaidCell.textContent = arr.paid;
                    aracTableRow.appendChild(aracPaidCell);
                    let aracRestCell = document.createElement("td");
                    aracRestCell.textContent = arr.rest;
                    aracTableRow.appendChild(aracRestCell);
                    let aracTotalCell = document.createElement("td");
                    aracTotalCell.textContent = arr.paid + arr.rest;
                    aracTableRow.appendChild(aracTotalCell);
                    aracTableBody.appendChild(aracTableRow);
                }
                else {
                    continue;
                }
            }
        }

        //Bilet detaylarını mesafeye gör sırala
        function mesafeSirala(array) {
            for (s = 0; s < array.length; s++) {
                let biletOrder = array[s];
                let biletOrderBolge = bolgeListArray.find(bo => bo.id === biletOrder.musteriBolgeId);
                let biletOrderOtel = otelListArray.find(o => o.id === biletOrder.musteriOtelId);
                if (biletOrderBolge !== undefined) {
                    biletOrder.bolgeMerkezeUzaklikMetre = biletOrderBolge.bolgeMerkezeUzaklikMetre;
                }
                if (biletOrderOtel !== undefined) {
                    biletOrder.otelMerkezeUzaklikMetre = biletOrderOtel.otelMerkezeUzaklikMetre;
                }
            }
            array.sort((a, b) => {
                if (a.bolgeMerkezeUzaklik === b.bolgeMerkezeUzaklik) {
                    return (a.otelMerkezeUzaklikMetre - b.otelMerkezeUzaklikMetre);
                }
                return (a.bolgeMerkezeUzaklikMetre - b.bolgeMerkezeUzaklikMetre);
            });
            return array;
        }

        function sendToCont(biletObj) {
            let array1 = [
                biletObj.id.toString(), biletObj.aracId.toString(), biletObj.servisId === null ? "" : biletObj.servisId.toString()
            ];
            console.log("array1:",array1);
            sendAracUpdateToController(array1);
        }
        
        //Ayrı Tablosunu doldurma fonksiyonu
        function fillAyriTable(money, paid, rest) {
            let ayriRow = document.createElement("tr");
            let ayriCell = document.createElement("td");
            ayriCell.textContent = money;
            ayriRow.appendChild(ayriCell);
            let ayriTotalCell = document.createElement("td");
            ayriTotalCell.textContent = paid + rest;
            ayriRow.appendChild(ayriTotalCell);
            let ayriPaidCell = document.createElement("td");
            ayriPaidCell.textContent = paid;
            ayriRow.appendChild(ayriPaidCell);
            let ayriRestCell = document.createElement("td");
            ayriRestCell.textContent = rest;
            ayriRow.appendChild(ayriRestCell);
            ayriTableBody.appendChild(ayriRow);
        }
        //Toplam Tablosunu doldurma fonksiyonu
        function fillToplamTable(money, paid, rest) {
            let topRow = document.createElement("tr");
            let topCell = document.createElement("td");
            topCell.textContent = money;
            topRow.appendChild(topCell);
            let topTotalCell = document.createElement("td");
            topTotalCell.textContent = (paid + rest).toFixed(2);
            topRow.appendChild(topTotalCell);
            let topPaidCell = document.createElement("td");
            topPaidCell.textContent = (paid).toFixed(2);
            topRow.appendChild(topPaidCell);
            let topRestCell = document.createElement("td");
            topRestCell.textContent = (rest).toFixed(2);
            topRow.appendChild(topRestCell);
            topTableBody.appendChild(topRow);
        }
        function getAracSecValue(){
            aracSecValue = aracSec.value;
            console.log("aracSecValue:",aracSecValue);
        }
    });
    function sendArrayToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/TourToUpdate",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
    function sendGelirGiderToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/GelirGiderPost",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
    function sendEndTourToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/EndTour",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
    function sendMergeTourToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/MergeTour",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
    function sendAracUpdateToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/UpdateBiletArac",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
    function biletEditToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/TicketToUpdate",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
</script>
