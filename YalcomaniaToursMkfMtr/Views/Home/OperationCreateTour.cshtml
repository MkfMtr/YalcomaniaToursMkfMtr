@using Newtonsoft.Json
@model OperationCreateTourModel
@{
    ViewData["Title"] = "Tur Oluşturma";

    // Bugüne en yakın Kur verisini al
    var closestKur = Model.KurList.OrderBy(k => Math.Abs((k.Tarih.ToDateTime(TimeOnly.MinValue) - DateTime.Today).TotalDays)).FirstOrDefault();

    // Kur değerlerini al
    decimal dolaraOran = closestKur?.DolaraOran ?? 0;
    decimal euroyaOran = closestKur?.EuroyaOran ?? 0;
    decimal kurUsd = 1 / dolaraOran;
    decimal kurEur = 1 / euroyaOran;
    kurUsd = Math.Round(kurUsd, 2);
    kurEur = Math.Round(kurEur, 2);
    Console.WriteLine(kurUsd);
    Console.WriteLine(kurEur);

    // Var olan tur bilgilerini al
    var jsonString = Context.Session.GetString("turValues");
    List<string> existingTurList = new List<string>();
    bool existingTur = false;
    if (jsonString != null)
    {
        List<string> turValues = JsonConvert.DeserializeObject<List<string>>(jsonString);
        Console.WriteLine("Tur Values:");
        int i = 0;
        foreach (var item in turValues)
        {
            Console.WriteLine(i + ": " + item);
            existingTurList.Add(item);
            i++;
        }
        existingTur = true;
    }
}

<div id="addtourdiv">
    <!-- Tarih - Saat - Tur Tipi -->
    <div style ="padding-bottom:2em; display:flex; flex-direction:row">
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Tarih</p>
            <input type="date" id="Tarih" name="Tarih" placeholder="Tarih" />
        </div>
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Saat</p>
            <input type="time" id="Saat" name="Saat" placeholder="Saat" />
        </div>
        <div>
            <p>Tur Tipi</p>
            <select id="TurTipiId" name="TurTipiId">
                @foreach (var tur in Model.TurTipiList)
                {
                    <option value="@tur.Id">@tur.TurTipiAdi</option>
                }
            </select>
        </div>
    </div>

    <!-- USD to TRY - EUR to TRY -->
    <div style="padding-bottom:2em; display:flex; flex-direction:row">
        <div style="padding-right:3em; display:flex; flex-direction:row">
            <p style="padding-right:1em;">1 USD =</p>
            <select id="UsdToTry" name="UsdToTry" disabled>
                <option value="@kurUsd">@kurUsd</option>
            </select>
            <p>TRY</p>
        </div>
        <div style="display:flex; flex-direction:row">
            <p style="padding-right:1em;">1 EUR =</p>
            <select id="EurToTry" name="EurToTry" disabled>
                <option value="@kurEur">@kurEur</option>
            </select>
            <p>TRY</p>
        </div>
    </div>

    <!-- Fiyat TRY - Fiyat USD - Fiyat EUR -->
    <div style="padding-bottom:2em; display:flex; flex-direction:row">
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Fiyat TRY</p>
            <input type="number" id="FiyatTry" name="FiyatTry" placeholder="FiyatTry" step="0.01" pattern="\d{1,16}(\.\d{2})?" />
        </div>
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Fiyat USD</p>
            <input type="number" id="FiyatUsd" name="FiyatUsd" placeholder="FiyatUsd" step="0.01" pattern="\d{1,16}(\.\d{2})?" />
        </div>
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Fiyat EUR</p>
            <input type="number" id="FiyatEur" name="FiyatEur" placeholder="FiyatEur" step="0.01" pattern="\d{1,16}(\.\d{2})?" />
        </div>
    </div>
    
    <!-- Arac 1 - Arac 2 - Arac 3 - Arac 4 -->
    <div style="padding-bottom:2em; display:flex; flex-direction:row">
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Arac 1</p>
            <select id="AracId1" name="AracId1">
                <!-- Javascript ile doldur -->
            </select>
        </div>
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Arac 2</p>
            <select id="AracId2" name="AracId2">
                <!-- Javascript ile doldur -->
            </select>
        </div>
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Arac 3</p>
            <select id="AracId3" name="AracId3">
                <!-- Javascript ile doldur -->
            </select>
        </div>
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Arac 4</p>
            <select id="AracId4" name="AracId4">
                <!-- Javascript ile doldur -->
            </select>
        </div>
    </div>
    
    <!-- Servis 1 - Servis 2 - Servis 3 -->
    <div style="padding-bottom:2em; display:flex; flex-direction:row">
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Servis 1</p>
            <select id="ServisId1" name="ServisId1">
                <!-- Javascript ile doldur -->
            </select>
        </div>
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Servis 2</p>
            <select id="ServisId2" name="ServisId2">
                <!-- Javascript ile doldur -->
            </select>
        </div>
        <div style="padding-right:1em; display:flex; flex-direction:column">
            <p>Servis 3</p>
            <select id="ServisId3" name="ServisId3">
                <!-- Javascript ile doldur -->
            </select>
        </div>
    </div>

    <div style="padding-bottom:2em; display:flex; flex-direction:row; gap:1em">
        <p>Tur İptal Mi:</p>
        <input type="checkbox" id="IptalMi" disabled/>
    </div>

    <button type="button" id="OnayButon">Turu Onayla</button>
</div>

<script>
    $(document).ready(function () {
        //#region Gerekli şeyleri (array vs.) oluştur
        let option;
        let aracList2
        let aracList3
        let aracList4
        let servisList2
        let servisList3
        let aracTipiList = @Html.Raw(Json.Serialize(Model.AracTipiList.Select(a => new{ a.Id, a.AracTipiAdi})));
        let aracListPre = @Html.Raw(Json.Serialize(Model.AracList.Select(a => new { a.Id, a.AracTipiId, a.PlakaVeyaIsim, a.SilindiMi })));
        let aracList = aracListPre.filter(a => a.silindiMi === false);
        let otobusId = aracTipiList.find(a => a.aracTipiAdi === "Otobüs").id;
        let otobusList = aracList.filter(a => a.aracTipiId === otobusId);
        let servisId = aracTipiList.find(a => a.aracTipiAdi === "Servis").id;
        let servisList = aracList.filter(a => a.aracTipiId === servisId);
        console.log("otobusList:", otobusList);
        console.log("servisList:", servisList);

        let turExists = @existingTur.ToString().ToLower();
        let existingTurList;
        console.log("turExists:", turExists);
        //#endregion
        
        //İlk araç seçeneklerini oluştur
        createAracOptions(otobusList, "AracId1");
        createAracOptions(servisList, "ServisId1");

        //#region Araç değerlerini al
        let aracId1D = getValue("AracId1");
        let aracId2D = getValue("AracId2");
        let aracId3D = getValue("AracId3");
        let servisId1D = getValue("ServisId1");
        let servisId2D = getValue("ServisId2");
        updateAracDisable();
        //#endregion

        //Tur varsa kutuları doldur
        if (turExists) {
            existingTurList = @Html.Raw(Json.Serialize(existingTurList));
            document.getElementById("IptalMi").disabled = false;
            document.getElementById("IptalMi").checked = existingTurList[15] === "true" ? true : false;
            document.getElementById("Tarih").value = existingTurList[1];
            document.getElementById("Saat").value = existingTurList[2];
            document.getElementById("TurTipiId").value = existingTurList[3];
            document.getElementById("FiyatTry").value = existingTurList[5];
            document.getElementById("FiyatUsd").value = existingTurList[6];
            document.getElementById("FiyatEur").value = existingTurList[7];
            
            document.getElementById("AracId1").value = existingTurList[8];
            aracId1D = getValue("AracId1");
            aracList2 = eliminateAracFromList(aracId1D, otobusList);
            createAracOptions(aracList2, "AracId2");
            updateAracDisable();

            document.getElementById("AracId2").value = existingTurList[9];
            aracId2D = getValue("AracId2");
            aracList3 = eliminateAracFromList(aracId2D, aracList2);
            createAracOptions(aracList3, "AracId3");
            updateAracDisable();

            document.getElementById("AracId3").value = existingTurList[10];
            aracId3D = getValue("AracId3");
            aracList4 = eliminateAracFromList(aracId3D, aracList3);
            createAracOptions(aracList4, "AracId4");
            updateAracDisable();

            document.getElementById("AracId4").value = existingTurList[11];
            
            document.getElementById("ServisId1").value = existingTurList[12];
            servisId1D = getValue("ServisId1");
            servisList2 = eliminateAracFromList(servisId1D, servisList);
            createAracOptions(servisList2, "ServisId2");
            updateAracDisable();

            document.getElementById("ServisId2").value = existingTurList[13];
            servisId2D = getValue("ServisId2");
            clearOptions("ServisId3");
            servisList3 = eliminateAracFromList(servisId2D, servisList2);
            createAracOptions(servisList3, "ServisId3");
            updateAracDisable();

            document.getElementById("ServisId3").value = existingTurList[14];
        };
        console.log("existingTurList:", existingTurList);

        //Onay butonuna basınca tur oluştur
        $("#OnayButon").click(function () {
            createTour();
        });

        //#region Araç seçince olacaklar
        $("#AracId1").change(function () {
            aracId1D = getValue("AracId1");
            clearOptions("AracId2");
            clearOptions("AracId3");
            clearOptions("AracId4");
            aracList2 = eliminateAracFromList(aracId1D, otobusList);
            createAracOptions(aracList2, "AracId2");
            updateAracDisable();
        });
        $("#AracId2").change(function () {
            aracId2D = getValue("AracId2");
            clearOptions("AracId3");
            clearOptions("AracId4");
            aracList3 = eliminateAracFromList(aracId2D, aracList2);
            createAracOptions(aracList3, "AracId3");
            updateAracDisable();
        });
        $("#AracId3").change(function () {
            aracId3D = getValue("AracId3");
            clearOptions("AracId4");
            aracList4 = eliminateAracFromList(aracId3D, aracList3);
            createAracOptions(aracList4, "AracId4");
            updateAracDisable();
        });
        $("#ServisId1").change(function () {
            servisId1D = getValue("ServisId1");
            clearOptions("ServisId2");
            clearOptions("ServisId3");
            servisList2 = eliminateAracFromList(servisId1D, servisList);
            createAracOptions(servisList2, "ServisId2");
            updateAracDisable();
        });
        $("#ServisId2").change(function () {
            servisId2D = getValue("ServisId2");
            clearOptions("ServisId3");
            servisList3 = eliminateAracFromList(servisId2D, servisList2);
            createAracOptions(servisList3, "ServisId3");
            updateAracDisable();
        });
        //#endregion

        //Araç için arrayden seçenekler oluştur
        function createAracOptions(array, elementId) {
            option = createOption("Seçilmedi", "");
            document.getElementById(elementId).appendChild(option);
            for (let i = 0; i < array.length; i++) {
                option = createOption(array[i].plakaVeyaIsim, array[i].id);
                document.getElementById(elementId).appendChild(option);
            }
        }

        //Seçenek oluştur
        function createOption(text, value) {
            let option1 = document.createElement("option");
            option1.value = value;
            option1.text = text;
            return option1;
        }

        //Araçların sırayla seçilmesini sağla
        function updateAracDisable(){
            if (!aracId1D) {
                clearOptions("AracId2");
                $("#AracId2").prop("disabled", true);
                aracId2D = null;
            }
            else{
                $("#AracId2").prop("disabled", false);
            }
            if (!aracId2D) {
                clearOptions("AracId3");
                $("#AracId3").prop("disabled", true);
                aracId3D = null;
            }
            else{
                $("#AracId3").prop("disabled", false);
            }
            if (!aracId3D) {
                clearOptions("AracId4");
                $("#AracId4").prop("disabled", true);
                aracId4D = null;
            }
            else{
                $("#AracId4").prop("disabled", false);
            }
            if (!servisId1D) {
                clearOptions("ServisId2");
                $("#ServisId2").prop("disabled", true);
                servisId2D = null;
            }
            else{
                $("#ServisId2").prop("disabled", false);
            }
            if (!servisId2D) {
                clearOptions("ServisId3");
                $("#ServisId3").prop("disabled", true);
                servisId3D = null;
            }
            else{
                $("#ServisId3").prop("disabled", false);
            }
        }

        //Arrayden aracı sil
        function eliminateAracFromList(aracId, array) {
            let chosenAracId = aracId;
            return array.filter(a => a.id !== chosenAracId);
        }

        //Elementin içini sil
        function clearOptions(elementId) {
            document.getElementById(elementId).innerHTML = "";
        }

        //Turu oluşturmaya başla
        function createTour() {
            let tarih = document.getElementById("Tarih").value;
            let saat = document.getElementById("Saat").value;
            let turTipiId = document.getElementById("TurTipiId").value;
            let fiyatTry = document.getElementById("FiyatTry").value;
            let fiyatUsd = document.getElementById("FiyatUsd").value;
            let fiyatEur = document.getElementById("FiyatEur").value;
            let aracId1 = document.getElementById("AracId1").value;
            let aracId2 = document.getElementById("AracId2").value;
            let aracId3 = document.getElementById("AracId3").value;
            let aracId4 = document.getElementById("AracId4").value;
            let servisId1 = document.getElementById("ServisId1").value;
            let servisId2 = document.getElementById("ServisId2").value;
            let servisId3 = document.getElementById("ServisId3").value;
            let turIptalMi = document.getElementById("IptalMi").checked.toString();

            if (validateMoneyInput(fiyatTry) === false || validateMoneyInput(fiyatUsd) === false || validateMoneyInput(fiyatEur) === false) {
                alert("Lütfen para miktarını doğru formatta giriniz! (Noktadan önce 18, sonra 2 hane olmalı. Örn: 123456789012345678.12)");
                return;
            }

            let logTourValues = {
                "tarih": tarih,
                "saat": saat,
                "turTipiId": turTipiId,
                "fiyatTry": fiyatTry,
                "fiyatUsd": fiyatUsd,
                "fiyatEur": fiyatEur,
                "aracId1": aracId1,
                "aracId2": aracId2,
                "aracId3": aracId3,
                "aracId4": aracId4,
                "servisId1": servisId1,
                "servisId2": servisId2,
                "servisId3": servisId3
            };
            console.log("logTourValues:", logTourValues);

            // Boş varsa uyar
            if (tarih && saat && turTipiId && fiyatTry && fiyatUsd && fiyatEur && aracId1) {

                let tourValues = [];
                tourValues.push(tarih);
                tourValues.push(saat);
                tourValues.push(turTipiId);
                tourValues.push(fiyatTry);
                tourValues.push(fiyatUsd);
                tourValues.push(fiyatEur);
                tourValues.push(aracId1);
                tourValues.push(aracId2);
                tourValues.push(aracId3);
                tourValues.push(aracId4);
                tourValues.push(servisId1);
                tourValues.push(servisId2);
                tourValues.push(servisId3);

                if (turExists) {
                    tourValues.push(existingTurList[0])
                    tourValues.push(turIptalMi);
                    console.log("tourValues:", tourValues);
                    sendUpdateToController(tourValues);
                } else {
                    console.log("tourValues:", tourValues);
                    sendArrayToController(tourValues);
                }

            } else {
                alert("Lütfen boş alanları doldurunuz!");
            }
        }
    });

    function validateMoneyInput(input) {
        let regex = /^\d{1,18}(\.\d{1,2})?$/;
        return regex.test(input);
    }

    //Değeri al, int'e çevir, boş stringi null yap
    function getValue(string) {
        return document.getElementById(string).value !== "" ? parseInt(document.getElementById(string).value) : null;
    }

    //Arrayi controllera gönder
    function sendArrayToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/SendTourDetails",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
    function sendUpdateToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/UpdateTourDetails",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
</script>