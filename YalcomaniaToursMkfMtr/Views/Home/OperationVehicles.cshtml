@model OperationVehiclesModel
@{
    ViewData["Title"] = "Araçları Yönet";
}
<style>
    #OtobusTable{
        width:40%;
    }
        #OtobusTable th {
            border: 1px solid black;
        }

        #OtobusTable td {
            border: 1px solid black;
        }
    #ServisTable{
        width:40%;
    }
        #ServisTable th {
            border: 1px solid black;
        }
        #ServisTable td {
            border: 1px solid black;
        }

</style>
<div style="display:flex; flex-direction:row; gap:1em;">
    <p>Silindi Mi?:</p>
    <input type="checkbox" id="SilindiMiBox" />
</div>
<div style="display:flex; flex-direction:row; padding-bottom:2em">
    <table id="OtobusTable">
        <thead>
            <tr>
                <th>Sahip Şirket</th>
                <th>Araç Plaka</th>
                <th>Araç Tipi</th>
                <th>Silindi Mi</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <!-- Javascriptte doldur -->
        </tbody>
    </table>

    <div style="width:20%"></div>

    <table id="ServisTable">
        <thead>
            <tr>
                <th>Sahip Şirket</th>
                <th>Araç Plaka</th>
                <th>Araç Tipi</th>
                <th>Silindi Mi</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            <!-- Javascriptte doldur -->
        </tbody>
    </table>
</div>

<div style="display:flex; flex-direction:row; gap:1em;">
    <div style="width:40%">
        <p>Yeni Araç Sirket:</p>
        <select id="YeniAracSirket">
            @foreach (var item in Model.SirketList)
            {
                <option value="@item.Id">@item.SirketAdi</option>
            }
        </select>
        <p>Yeni Araç Plaka:</p>
        <input type="text" id="YeniAracPlaka" />
        <p>Yeni Araç Tipi:</p>
        <select id="YeniAracTipi">
            <!-- Javascriptte doldur -->
        </select>
        <p>Yeni Araç Kapasite:</p>
        <input type="number" id="YeniAracKapasite" />
        <button id="YeniAracEkle">Ekle</button>
    </div>
    <div style="width:20%"></div>
    <div style="width:40%">
        <p id="AracBilgiBilgi">Silinen Araç:</p>
        <p id="AracBilgi"></p>
    </div>
    
</div>


<script>
    $(document).ready(function () {
        let aracList = @Html.Raw(Json.Serialize(Model.AracList.Select(a => new { a.Id, a.SahipSirket, a.AracTipiId, a.PlakaVeyaIsim, a.SilindiMi})));
        let aracTipiList = @Html.Raw(Json.Serialize(Model.AracTipiList.Select(a => new { a.Id, a.AracTipiAdi })));
        let sirketList = @Html.Raw(Json.Serialize(Model.SirketList.Select(a => new { a.Id, a.SirketAdi })));
        console.log("aracList:",aracList);
        console.log("aracTipiList:",aracTipiList);
        let silindiMi = document.getElementById("SilindiMiBox").checked;

        fillTable("#OtobusTable", "Otobüs");
        fillTable("#ServisTable", "Servis");

        document.getElementById("SilindiMiBox").addEventListener("change", function () {
            silindiMi = this.checked;
            fillTable("#OtobusTable", "Otobüs");
            fillTable("#ServisTable", "Servis");
        });

        fillAracTipi();

        document.getElementById("YeniAracSirket").addEventListener("change", function () {
            fillAracTipi();
        });

        document.getElementById("YeniAracEkle").addEventListener("click", function () {
            let yeniAracSirket = document.getElementById("YeniAracSirket").value;
            let yeniAracPlaka = document.getElementById("YeniAracPlaka").value;
            let yeniAracTipi = document.getElementById("YeniAracTipi").value;
            let yeniAracKapasite = document.getElementById("YeniAracKapasite").value;
            let yeniArac = [yeniAracSirket, yeniAracPlaka, yeniAracTipi, yeniAracKapasite];
            if (parseInt(yeniAracKapasite) > 255) {
                alert("Kapasite 255'ten büyük olamaz.");
            }
            else if (parseInt(yeniAracKapasite) < 1) {
                alert("Kapasite 1'den küçük olamaz.");
            }
            else if (yeniAracPlaka.length > 50) {
                alert("Plaka 50 karakterden uzun olamaz.");
            }
            else if (yeniAracPlaka.length < 1) {
                alert("Plaka boş olamaz.");
            }
            else { sendArrayToController(yeniArac); }
        });

        //Tablo doldurma fonksiyonu
        function fillTable(id, string){
            let tableBody = document.querySelector(id + " tbody");
            tableBody.innerHTML = "";
            for (let i = 0; i < aracList.length; i++) {
                let arac = aracList[i];
                let row = document.createElement("tr");
                let aracTipi = aracTipiList.find(a => a.id === arac.aracTipiId);
                let sirketName = sirketList.find(a => a.id === arac.sahipSirket);
                if (aracTipi.aracTipiAdi === string && arac.silindiMi === silindiMi) {
                    let sirketCell = document.createElement("td");
                    sirketCell.innerText = sirketName.sirketAdi;
                    row.appendChild(sirketCell);
                    let plakaCell = document.createElement("td");
                    plakaCell.innerText = arac.plakaVeyaIsim;
                    row.appendChild(plakaCell);
                    let tipCell = document.createElement("td");
                    tipCell.innerText = aracTipi.aracTipiAdi;
                    row.appendChild(tipCell);
                    let silindiMiCell = document.createElement("td");
                    silindiMiCell.innerText = arac.silindiMi ? "Evet" : "Hayır";
                    row.appendChild(silindiMiCell);
                    //#region Silme / Geri Alma tuşu kısmını oluştur.
                    let silButtonCell = document.createElement("td");
                    let silButton = document.createElement("button");
                    silButton.id = arac.id;
                    if (silindiMi === false){
                        document.getElementById("AracBilgiBilgi").innerText = "Silinen Araç:";
                        silButton.innerText = "Sil";
                        silButton.addEventListener("click", function (aracObject) {
                            return function () {
                                deletion(aracObject, true);
                            }
                        }(arac));
                    }
                    else {
                        document.getElementById("AracBilgiBilgi").innerText = "Geri Alınan Araç:";
                        silButton.innerText = "Geri Al";
                        silButton.addEventListener("click", function (aracObject) {
                            return function () {
                                deletion(aracObject, false);
                            }
                        }(arac));
                    }
                    silButtonCell.appendChild(silButton);
                    row.appendChild(silButtonCell);
                    //#endregion
                    tableBody.appendChild(row);
                }
                
            }
        }

        function fillAracTipi(){
            let selectedSirket = document.getElementById("YeniAracSirket").value;
            document.getElementById("YeniAracTipi").innerHTML = "";
            if (selectedSirket === "1") {
                aracTipiList.forEach(a => {
                    let option = document.createElement("option");
                    option.value = a.id;
                    console.log("option.value:", option.value);
                    option.innerText = a.aracTipiAdi;
                    document.getElementById("YeniAracTipi").appendChild(option);
                })
            }
            else{
                let option = document.createElement("option");
                option.value = "1";
                option.innerText = "Otobüs";
                document.getElementById("YeniAracTipi").appendChild(option);
            }
        }

        function deletion(arac,bool){
            let silArac = aracList.find(a => a.id === arac.id);
            silArac.silindiMi = bool;
            silArray = [silArac.id.toString(), silArac.silindiMi.toString()];
            console.log("silArray:", silArray);
            sendDeleteToController(silArray);
        }

        
    });
    function sendArrayToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/SendNewVehicleDetails",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
    function sendDeleteToController(array) {
        $.ajax({
            type: "POST",
            url: "/Home/SendDeleteVehicleDetails",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(array),
            success: function (response) {
                console.log("Data sent successfully:", response);
                if (response.redirectUrl) {
                    window.location.href = response.redirectUrl;
                }
            },
            error: function (error) {
                console.error("Error sending data:", error);
            }
        });
    }
</script>
